diff --git a/node_modules/react-native-macos/React/Fabric/Mounting/ComponentViews/Text/RCTParagraphComponentView.mm b/node_modules/react-native-macos/React/Fabric/Mounting/ComponentViews/Text/RCTParagraphComponentView.mm
index b5e5f3c..299d007 100644
--- a/node_modules/react-native-macos/React/Fabric/Mounting/ComponentViews/Text/RCTParagraphComponentView.mm
+++ b/node_modules/react-native-macos/React/Fabric/Mounting/ComponentViews/Text/RCTParagraphComponentView.mm
@@ -404,26 +404,9 @@ Class<RCTComponentViewProtocol> RCTParagraphCls(void)
       (RCTTextLayoutManager *)unwrapManagedObject(textLayoutManager->getNativeTextLayoutManager());
 
   CGRect frame = RCTCGRectFromRect(_layoutMetrics.getContentFrame());
+  self.frame = frame;
+  if (![self isVisibleInWindow]) return;
 
-#if !TARGET_OS_OSX // [macOS]
-  [nativeTextLayoutManager drawAttributedString:_state->getData().attributedString
-                            paragraphAttributes:_paragraphAttributes
-                                          frame:frame
-                              drawHighlightPath:^(UIBezierPath *highlightPath) {
-                                if (highlightPath) {
-                                  if (!self->_highlightLayer) {
-                                    self->_highlightLayer = [CAShapeLayer layer];
-                                    self->_highlightLayer.fillColor = [RCTUIColor colorWithWhite:0 alpha:0.25].CGColor; // [macOS]
-                                    [self.layer addSublayer:self->_highlightLayer];
-                                  }
-                                  self->_highlightLayer.position = frame.origin;
-                                  self->_highlightLayer.path = highlightPath.CGPath;
-                                } else {
-                                  [self->_highlightLayer removeFromSuperlayer];
-                                  self->_highlightLayer = nil;
-                                }
-                              }];
-#else // [macOS
   NSTextStorage *textStorage = [nativeTextLayoutManager getTextStorageForAttributedString:_state->getData().attributedString paragraphAttributes:_paragraphAttributes size:frame.size];
 
   NSLayoutManager *layoutManager = textStorage.layoutManagers.firstObject;
@@ -438,11 +421,30 @@ Class<RCTComponentViewProtocol> RCTParagraphCls(void)
 
   self.minSize = frame.size;
   self.maxSize = frame.size;
-  self.frame = frame;
   [[self textStorage] setAttributedString:textStorage];
 
   [super drawRect:rect];
-#endif
+}
+
+- (void)setFrame:(NSRect)frame {
+    // If the frame is not changing, exit
+    //if (NSEqualRects(self.frame, frame)) return;
+    [super setFrame:frame];
+}
+
+- (void)setBounds:(NSRect)bounds {
+    // If the bounds are not changing, exit
+    if (NSEqualRects(self.bounds, bounds)) return;
+    [super setBounds:bounds];
+}
+
+- (BOOL)isVisibleInWindow {
+    if (!self.window) return NO;
+    // if (self.isHidden) return NO;
+    if (self.frame.size.width <= 0 || self.frame.size.height <= 0) return NO;
+    NSRect viewFrameInWindow = [self convertRect:self.frame toView:nil];
+    NSRect visibleFrameOfWindow = self.window.contentView.visibleRect;
+    return NSIntersectsRect(viewFrameInWindow, visibleFrameOfWindow);
 }
 
 #if TARGET_OS_OSX // [macOS
diff --git a/node_modules/react-native-macos/React/Fabric/Mounting/ComponentViews/TextInput/RCTTextInputComponentView.mm b/node_modules/react-native-macos/React/Fabric/Mounting/ComponentViews/TextInput/RCTTextInputComponentView.mm
index fd43f3b..3a9ba95 100644
--- a/node_modules/react-native-macos/React/Fabric/Mounting/ComponentViews/TextInput/RCTTextInputComponentView.mm
+++ b/node_modules/react-native-macos/React/Fabric/Mounting/ComponentViews/TextInput/RCTTextInputComponentView.mm
@@ -91,7 +91,11 @@ static NSSet<NSNumber *> *returnKeyTypesSet;
     _ignoreNextTextInputCall = NO;
     _comingFromJS = NO;
     _didMoveToWindow = NO;
+#if !TARGET_OS_OSX
     _originalTypingAttributes = [_backedTextInputView.typingAttributes copy];
+#else
+    _originalTypingAttributes = @{};
+#endif // [macOS]
 
     [self addSubview:_backedTextInputView];
 #if TARGET_OS_IOS // [macOS] [visionOS]
